"""Add status and status_updated_at to KYC

Revision ID: 0e71cec05498
Revises: fcbb0aed2193
Create Date: 2025-06-13 10:20:02.657324

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import ENUM
from datetime import datetime

# revision identifiers, used by Alembic.
revision: str = '0e71cec05498'
down_revision: Union[str, None] = 'fcbb0aed2193'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# Define the new ENUM type for KYCStatus
kyc_status_enum = ENUM('Draft', 'Pending', 'Approved', 'Rejected', name='kycstatus', create_type=False)

def upgrade() -> None:
    """Upgrade schema."""
    # Add the ENUM type to the database
    kyc_status_enum.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('kyc', sa.Column('status', sa.Enum('draft', 'pending', 'approved', 'rejected', name='kycstatus'), nullable=True))
    op.add_column('kyc', sa.Column('status_updated_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###

    # Update legacy data (if needed)
    op.execute("UPDATE kyc SET status = 'Draft', status_updated_at = CURRENT_TIMESTAMP WHERE status IS NULL")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('kyc', 'status_updated_at')
    op.drop_column('kyc', 'status')
    # ### end Alembic commands ###

    # Drop the ENUM type
    kyc_status_enum.drop(op.get_bind(), checkfirst=True)
